# fichier de conf pour les requêtes de signature de certificat
#
# ce fichier fournie une demande de DN complète non EV.
# les extensions à demander sont à sélectionner via le paramètre
# en ligne de commande "-reqexts

[ req ]
prompt                  = yes
default_md              = sha256
utf8                    = yes
string_mask             = utf8only
distinguished_name      = req_dn

# mettre un point pour vider un champ fourni avec une valeur default
[ req_dn ]
countryName             = Country Name (2 letter code)
countryName_default     = FR
countryName_min         = 2
countryName_max         = 2

commonName              = Common Name (eg, YOUR name)
emailAddress            = Email Address
organizationName        = Organization 
organizationalUnitName  = Organizational Unit Name
localityName            = Locality Name (eg, city)
stateOrProvinceName     = State or Province Name



# subjectKeyIdentifier
#	toujours hash

# basicConstraints
#	absent --> non défini
#	autorité --> CA:True
#	ent finale --> CA:False
#	nb CA enfants --> pathlen:x
#	critical ?

# keyUsage
#	digitalSignature
#	nonRepudiation
#	keyEncipherment
#	dataEncipherment
#	keyAgreement
#	keyCertSign
#	cRLSign
#	encipherOnly
#	decipherOnly
#	critical ?

# extendedKeyUsage
#	serverAuth
#	clientAuth
#	codeSigning
#	emailProtection
#	timeStamping
#	ipsecEndSystem
#	ipsecTunnel
#	ipsecUser
#	smartcardlogon
#	OCSPSigning
#	...

# subjectAltName
#	vu qu'il y a au moins un jeu d'extensions qui en dispose,
#	il faut nécessaire fournir la variable SAN
#	si extension without SAN --> définir SAN à "#" en amont


[ rootca_ext ]
subjectKeyIdentifier    = hash
basicConstraints        = critical,CA:true
keyUsage                = critical,keyCertSign,cRLSign

[ signingca_ext ]
subjectKeyIdentifier    = hash
basicConstraints        = critical,CA:true,pathlen:0
keyUsage                = critical,keyCertSign,cRLSign

[ server_ext ]
subjectAltName          = ${ENV::SAN}
subjectKeyIdentifier    = hash
basicConstraints        = critical,CA:false
keyUsage                = critical,digitalSignature,nonRepudiation,keyEncipherment,dataEncipherment
extendedKeyUsage        = serverAuth,clientAuth

[ ocspsign_ext ]
keyUsage                = critical,digitalSignature
extendedKeyUsage        = critical,OCSPSigning
subjectKeyIdentifier    = hash

#####################################################################
[ server-without-san_ext ]
subjectKeyIdentifier    = hash
basicConstraints        = critical,CA:false
keyUsage                = critical,digitalSignature,nonRepudiation,keyEncipherment,dataEncipherment
extendedKeyUsage        = serverAuth,clientAuth

[ client_ext ]
subjectAltName          = email:move
subjectKeyIdentifier    = hash
basicConstraints        = critical,CA:false
keyUsage                = critical,digitalSignature
extendedKeyUsage        = clientAuth

[ codesign_ext ]
subjectAltName          = email:move
subjectKeyIdentifier    = hash
basicConstraints        = critical,CA:false
keyUsage                = critical,digitalSignature
extendedKeyUsage        = critical,codeSigning

[ email_ext ]
subjectAltName          = email:move
subjectKeyIdentifier    = hash
basicConstraints        = critical,CA:false
keyUsage                = critical,digitalSignature,keyEncipherment
extendedKeyUsage        = emailProtection,clientAuth

[ timestamp_ext ]
#subjectAltName         = ${ENV::SAN}
keyUsage                = critical,digitalSignature
extendedKeyUsage        = critical,timeStamping
subjectKeyIdentifier    = hash

